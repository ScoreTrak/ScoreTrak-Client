// source: pkg/property/propertypb/property.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var pkg_proto_utilpb_uuid_pb = require('../../../pkg/proto/utilpb/uuid_pb.js');
goog.object.extend(proto, pkg_proto_utilpb_uuid_pb);
goog.exportSymbol('proto.pkg.property.propertypb.DeleteRequest', null, global);
goog.exportSymbol('proto.pkg.property.propertypb.DeleteResponse', null, global);
goog.exportSymbol('proto.pkg.property.propertypb.GetAllByServiceIDRequest', null, global);
goog.exportSymbol('proto.pkg.property.propertypb.GetAllByServiceIDResponse', null, global);
goog.exportSymbol('proto.pkg.property.propertypb.GetAllRequest', null, global);
goog.exportSymbol('proto.pkg.property.propertypb.GetAllResponse', null, global);
goog.exportSymbol('proto.pkg.property.propertypb.GetByServiceIDKeyRequest', null, global);
goog.exportSymbol('proto.pkg.property.propertypb.GetByServiceIDKeyResponse', null, global);
goog.exportSymbol('proto.pkg.property.propertypb.Property', null, global);
goog.exportSymbol('proto.pkg.property.propertypb.Status', null, global);
goog.exportSymbol('proto.pkg.property.propertypb.StoreRequest', null, global);
goog.exportSymbol('proto.pkg.property.propertypb.StoreResponse', null, global);
goog.exportSymbol('proto.pkg.property.propertypb.UpdateRequest', null, global);
goog.exportSymbol('proto.pkg.property.propertypb.UpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.property.propertypb.Property = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.property.propertypb.Property, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.property.propertypb.Property.displayName = 'proto.pkg.property.propertypb.Property';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.property.propertypb.GetAllRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.property.propertypb.GetAllRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.property.propertypb.GetAllRequest.displayName = 'proto.pkg.property.propertypb.GetAllRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.property.propertypb.GetAllResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pkg.property.propertypb.GetAllResponse.repeatedFields_, null);
};
goog.inherits(proto.pkg.property.propertypb.GetAllResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.property.propertypb.GetAllResponse.displayName = 'proto.pkg.property.propertypb.GetAllResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.property.propertypb.GetByServiceIDKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.property.propertypb.GetByServiceIDKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.property.propertypb.GetByServiceIDKeyRequest.displayName = 'proto.pkg.property.propertypb.GetByServiceIDKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.property.propertypb.GetByServiceIDKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.property.propertypb.GetByServiceIDKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.property.propertypb.GetByServiceIDKeyResponse.displayName = 'proto.pkg.property.propertypb.GetByServiceIDKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.property.propertypb.GetAllByServiceIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.property.propertypb.GetAllByServiceIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.property.propertypb.GetAllByServiceIDRequest.displayName = 'proto.pkg.property.propertypb.GetAllByServiceIDRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.property.propertypb.GetAllByServiceIDResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pkg.property.propertypb.GetAllByServiceIDResponse.repeatedFields_, null);
};
goog.inherits(proto.pkg.property.propertypb.GetAllByServiceIDResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.property.propertypb.GetAllByServiceIDResponse.displayName = 'proto.pkg.property.propertypb.GetAllByServiceIDResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.property.propertypb.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.property.propertypb.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.property.propertypb.DeleteRequest.displayName = 'proto.pkg.property.propertypb.DeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.property.propertypb.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.property.propertypb.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.property.propertypb.DeleteResponse.displayName = 'proto.pkg.property.propertypb.DeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.property.propertypb.StoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pkg.property.propertypb.StoreRequest.repeatedFields_, null);
};
goog.inherits(proto.pkg.property.propertypb.StoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.property.propertypb.StoreRequest.displayName = 'proto.pkg.property.propertypb.StoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.property.propertypb.StoreResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.property.propertypb.StoreResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.property.propertypb.StoreResponse.displayName = 'proto.pkg.property.propertypb.StoreResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.property.propertypb.UpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.property.propertypb.UpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.property.propertypb.UpdateRequest.displayName = 'proto.pkg.property.propertypb.UpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.property.propertypb.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.property.propertypb.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.property.propertypb.UpdateResponse.displayName = 'proto.pkg.property.propertypb.UpdateResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.property.propertypb.Property.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.property.propertypb.Property.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.property.propertypb.Property} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.Property.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceId: (f = msg.getServiceId()) && pkg_proto_utilpb_uuid_pb.UUID.toObject(includeInstance, f),
    key: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: (f = msg.getValue()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.property.propertypb.Property}
 */
proto.pkg.property.propertypb.Property.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.property.propertypb.Property;
  return proto.pkg.property.propertypb.Property.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.property.propertypb.Property} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.property.propertypb.Property}
 */
proto.pkg.property.propertypb.Property.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_proto_utilpb_uuid_pb.UUID;
      reader.readMessage(value,pkg_proto_utilpb_uuid_pb.UUID.deserializeBinaryFromReader);
      msg.setServiceId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {!proto.pkg.property.propertypb.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.property.propertypb.Property.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.property.propertypb.Property.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.property.propertypb.Property} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.Property.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_proto_utilpb_uuid_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional pkg.proto.utilpb.UUID service_id = 1;
 * @return {?proto.pkg.proto.utilpb.UUID}
 */
proto.pkg.property.propertypb.Property.prototype.getServiceId = function() {
  return /** @type{?proto.pkg.proto.utilpb.UUID} */ (
    jspb.Message.getWrapperField(this, pkg_proto_utilpb_uuid_pb.UUID, 1));
};


/**
 * @param {?proto.pkg.proto.utilpb.UUID|undefined} value
 * @return {!proto.pkg.property.propertypb.Property} returns this
*/
proto.pkg.property.propertypb.Property.prototype.setServiceId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.property.propertypb.Property} returns this
 */
proto.pkg.property.propertypb.Property.prototype.clearServiceId = function() {
  return this.setServiceId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.property.propertypb.Property.prototype.hasServiceId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string key = 2;
 * @return {string}
 */
proto.pkg.property.propertypb.Property.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pkg.property.propertypb.Property} returns this
 */
proto.pkg.property.propertypb.Property.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.StringValue value = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.pkg.property.propertypb.Property.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 3));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.pkg.property.propertypb.Property} returns this
*/
proto.pkg.property.propertypb.Property.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.property.propertypb.Property} returns this
 */
proto.pkg.property.propertypb.Property.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.property.propertypb.Property.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Status status = 4;
 * @return {!proto.pkg.property.propertypb.Status}
 */
proto.pkg.property.propertypb.Property.prototype.getStatus = function() {
  return /** @type {!proto.pkg.property.propertypb.Status} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.pkg.property.propertypb.Status} value
 * @return {!proto.pkg.property.propertypb.Property} returns this
 */
proto.pkg.property.propertypb.Property.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.property.propertypb.GetAllRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.property.propertypb.GetAllRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.property.propertypb.GetAllRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.GetAllRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.property.propertypb.GetAllRequest}
 */
proto.pkg.property.propertypb.GetAllRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.property.propertypb.GetAllRequest;
  return proto.pkg.property.propertypb.GetAllRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.property.propertypb.GetAllRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.property.propertypb.GetAllRequest}
 */
proto.pkg.property.propertypb.GetAllRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.property.propertypb.GetAllRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.property.propertypb.GetAllRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.property.propertypb.GetAllRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.GetAllRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pkg.property.propertypb.GetAllResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.property.propertypb.GetAllResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.property.propertypb.GetAllResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.property.propertypb.GetAllResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.GetAllResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    proto.pkg.property.propertypb.Property.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.property.propertypb.GetAllResponse}
 */
proto.pkg.property.propertypb.GetAllResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.property.propertypb.GetAllResponse;
  return proto.pkg.property.propertypb.GetAllResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.property.propertypb.GetAllResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.property.propertypb.GetAllResponse}
 */
proto.pkg.property.propertypb.GetAllResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pkg.property.propertypb.Property;
      reader.readMessage(value,proto.pkg.property.propertypb.Property.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.property.propertypb.GetAllResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.property.propertypb.GetAllResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.property.propertypb.GetAllResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.GetAllResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pkg.property.propertypb.Property.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Property properties = 1;
 * @return {!Array<!proto.pkg.property.propertypb.Property>}
 */
proto.pkg.property.propertypb.GetAllResponse.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.pkg.property.propertypb.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pkg.property.propertypb.Property, 1));
};


/**
 * @param {!Array<!proto.pkg.property.propertypb.Property>} value
 * @return {!proto.pkg.property.propertypb.GetAllResponse} returns this
*/
proto.pkg.property.propertypb.GetAllResponse.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pkg.property.propertypb.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pkg.property.propertypb.Property}
 */
proto.pkg.property.propertypb.GetAllResponse.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pkg.property.propertypb.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pkg.property.propertypb.GetAllResponse} returns this
 */
proto.pkg.property.propertypb.GetAllResponse.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.property.propertypb.GetByServiceIDKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.property.propertypb.GetByServiceIDKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.property.propertypb.GetByServiceIDKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.GetByServiceIDKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceId: (f = msg.getServiceId()) && pkg_proto_utilpb_uuid_pb.UUID.toObject(includeInstance, f),
    key: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.property.propertypb.GetByServiceIDKeyRequest}
 */
proto.pkg.property.propertypb.GetByServiceIDKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.property.propertypb.GetByServiceIDKeyRequest;
  return proto.pkg.property.propertypb.GetByServiceIDKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.property.propertypb.GetByServiceIDKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.property.propertypb.GetByServiceIDKeyRequest}
 */
proto.pkg.property.propertypb.GetByServiceIDKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_proto_utilpb_uuid_pb.UUID;
      reader.readMessage(value,pkg_proto_utilpb_uuid_pb.UUID.deserializeBinaryFromReader);
      msg.setServiceId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.property.propertypb.GetByServiceIDKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.property.propertypb.GetByServiceIDKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.property.propertypb.GetByServiceIDKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.GetByServiceIDKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_proto_utilpb_uuid_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional pkg.proto.utilpb.UUID service_id = 1;
 * @return {?proto.pkg.proto.utilpb.UUID}
 */
proto.pkg.property.propertypb.GetByServiceIDKeyRequest.prototype.getServiceId = function() {
  return /** @type{?proto.pkg.proto.utilpb.UUID} */ (
    jspb.Message.getWrapperField(this, pkg_proto_utilpb_uuid_pb.UUID, 1));
};


/**
 * @param {?proto.pkg.proto.utilpb.UUID|undefined} value
 * @return {!proto.pkg.property.propertypb.GetByServiceIDKeyRequest} returns this
*/
proto.pkg.property.propertypb.GetByServiceIDKeyRequest.prototype.setServiceId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.property.propertypb.GetByServiceIDKeyRequest} returns this
 */
proto.pkg.property.propertypb.GetByServiceIDKeyRequest.prototype.clearServiceId = function() {
  return this.setServiceId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.property.propertypb.GetByServiceIDKeyRequest.prototype.hasServiceId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string key = 2;
 * @return {string}
 */
proto.pkg.property.propertypb.GetByServiceIDKeyRequest.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pkg.property.propertypb.GetByServiceIDKeyRequest} returns this
 */
proto.pkg.property.propertypb.GetByServiceIDKeyRequest.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.property.propertypb.GetByServiceIDKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.property.propertypb.GetByServiceIDKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.property.propertypb.GetByServiceIDKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.GetByServiceIDKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    property: (f = msg.getProperty()) && proto.pkg.property.propertypb.Property.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.property.propertypb.GetByServiceIDKeyResponse}
 */
proto.pkg.property.propertypb.GetByServiceIDKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.property.propertypb.GetByServiceIDKeyResponse;
  return proto.pkg.property.propertypb.GetByServiceIDKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.property.propertypb.GetByServiceIDKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.property.propertypb.GetByServiceIDKeyResponse}
 */
proto.pkg.property.propertypb.GetByServiceIDKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pkg.property.propertypb.Property;
      reader.readMessage(value,proto.pkg.property.propertypb.Property.deserializeBinaryFromReader);
      msg.setProperty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.property.propertypb.GetByServiceIDKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.property.propertypb.GetByServiceIDKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.property.propertypb.GetByServiceIDKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.GetByServiceIDKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProperty();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pkg.property.propertypb.Property.serializeBinaryToWriter
    );
  }
};


/**
 * optional Property property = 1;
 * @return {?proto.pkg.property.propertypb.Property}
 */
proto.pkg.property.propertypb.GetByServiceIDKeyResponse.prototype.getProperty = function() {
  return /** @type{?proto.pkg.property.propertypb.Property} */ (
    jspb.Message.getWrapperField(this, proto.pkg.property.propertypb.Property, 1));
};


/**
 * @param {?proto.pkg.property.propertypb.Property|undefined} value
 * @return {!proto.pkg.property.propertypb.GetByServiceIDKeyResponse} returns this
*/
proto.pkg.property.propertypb.GetByServiceIDKeyResponse.prototype.setProperty = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.property.propertypb.GetByServiceIDKeyResponse} returns this
 */
proto.pkg.property.propertypb.GetByServiceIDKeyResponse.prototype.clearProperty = function() {
  return this.setProperty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.property.propertypb.GetByServiceIDKeyResponse.prototype.hasProperty = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.property.propertypb.GetAllByServiceIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.property.propertypb.GetAllByServiceIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.property.propertypb.GetAllByServiceIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.GetAllByServiceIDRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceId: (f = msg.getServiceId()) && pkg_proto_utilpb_uuid_pb.UUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.property.propertypb.GetAllByServiceIDRequest}
 */
proto.pkg.property.propertypb.GetAllByServiceIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.property.propertypb.GetAllByServiceIDRequest;
  return proto.pkg.property.propertypb.GetAllByServiceIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.property.propertypb.GetAllByServiceIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.property.propertypb.GetAllByServiceIDRequest}
 */
proto.pkg.property.propertypb.GetAllByServiceIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_proto_utilpb_uuid_pb.UUID;
      reader.readMessage(value,pkg_proto_utilpb_uuid_pb.UUID.deserializeBinaryFromReader);
      msg.setServiceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.property.propertypb.GetAllByServiceIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.property.propertypb.GetAllByServiceIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.property.propertypb.GetAllByServiceIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.GetAllByServiceIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_proto_utilpb_uuid_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional pkg.proto.utilpb.UUID service_id = 1;
 * @return {?proto.pkg.proto.utilpb.UUID}
 */
proto.pkg.property.propertypb.GetAllByServiceIDRequest.prototype.getServiceId = function() {
  return /** @type{?proto.pkg.proto.utilpb.UUID} */ (
    jspb.Message.getWrapperField(this, pkg_proto_utilpb_uuid_pb.UUID, 1));
};


/**
 * @param {?proto.pkg.proto.utilpb.UUID|undefined} value
 * @return {!proto.pkg.property.propertypb.GetAllByServiceIDRequest} returns this
*/
proto.pkg.property.propertypb.GetAllByServiceIDRequest.prototype.setServiceId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.property.propertypb.GetAllByServiceIDRequest} returns this
 */
proto.pkg.property.propertypb.GetAllByServiceIDRequest.prototype.clearServiceId = function() {
  return this.setServiceId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.property.propertypb.GetAllByServiceIDRequest.prototype.hasServiceId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pkg.property.propertypb.GetAllByServiceIDResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.property.propertypb.GetAllByServiceIDResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.property.propertypb.GetAllByServiceIDResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.property.propertypb.GetAllByServiceIDResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.GetAllByServiceIDResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    proto.pkg.property.propertypb.Property.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.property.propertypb.GetAllByServiceIDResponse}
 */
proto.pkg.property.propertypb.GetAllByServiceIDResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.property.propertypb.GetAllByServiceIDResponse;
  return proto.pkg.property.propertypb.GetAllByServiceIDResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.property.propertypb.GetAllByServiceIDResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.property.propertypb.GetAllByServiceIDResponse}
 */
proto.pkg.property.propertypb.GetAllByServiceIDResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pkg.property.propertypb.Property;
      reader.readMessage(value,proto.pkg.property.propertypb.Property.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.property.propertypb.GetAllByServiceIDResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.property.propertypb.GetAllByServiceIDResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.property.propertypb.GetAllByServiceIDResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.GetAllByServiceIDResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pkg.property.propertypb.Property.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Property properties = 1;
 * @return {!Array<!proto.pkg.property.propertypb.Property>}
 */
proto.pkg.property.propertypb.GetAllByServiceIDResponse.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.pkg.property.propertypb.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pkg.property.propertypb.Property, 1));
};


/**
 * @param {!Array<!proto.pkg.property.propertypb.Property>} value
 * @return {!proto.pkg.property.propertypb.GetAllByServiceIDResponse} returns this
*/
proto.pkg.property.propertypb.GetAllByServiceIDResponse.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pkg.property.propertypb.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pkg.property.propertypb.Property}
 */
proto.pkg.property.propertypb.GetAllByServiceIDResponse.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pkg.property.propertypb.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pkg.property.propertypb.GetAllByServiceIDResponse} returns this
 */
proto.pkg.property.propertypb.GetAllByServiceIDResponse.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.property.propertypb.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.property.propertypb.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.property.propertypb.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceId: (f = msg.getServiceId()) && pkg_proto_utilpb_uuid_pb.UUID.toObject(includeInstance, f),
    key: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.property.propertypb.DeleteRequest}
 */
proto.pkg.property.propertypb.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.property.propertypb.DeleteRequest;
  return proto.pkg.property.propertypb.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.property.propertypb.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.property.propertypb.DeleteRequest}
 */
proto.pkg.property.propertypb.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_proto_utilpb_uuid_pb.UUID;
      reader.readMessage(value,pkg_proto_utilpb_uuid_pb.UUID.deserializeBinaryFromReader);
      msg.setServiceId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.property.propertypb.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.property.propertypb.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.property.propertypb.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_proto_utilpb_uuid_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional pkg.proto.utilpb.UUID service_id = 1;
 * @return {?proto.pkg.proto.utilpb.UUID}
 */
proto.pkg.property.propertypb.DeleteRequest.prototype.getServiceId = function() {
  return /** @type{?proto.pkg.proto.utilpb.UUID} */ (
    jspb.Message.getWrapperField(this, pkg_proto_utilpb_uuid_pb.UUID, 1));
};


/**
 * @param {?proto.pkg.proto.utilpb.UUID|undefined} value
 * @return {!proto.pkg.property.propertypb.DeleteRequest} returns this
*/
proto.pkg.property.propertypb.DeleteRequest.prototype.setServiceId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.property.propertypb.DeleteRequest} returns this
 */
proto.pkg.property.propertypb.DeleteRequest.prototype.clearServiceId = function() {
  return this.setServiceId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.property.propertypb.DeleteRequest.prototype.hasServiceId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string key = 2;
 * @return {string}
 */
proto.pkg.property.propertypb.DeleteRequest.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pkg.property.propertypb.DeleteRequest} returns this
 */
proto.pkg.property.propertypb.DeleteRequest.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.property.propertypb.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.property.propertypb.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.property.propertypb.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.property.propertypb.DeleteResponse}
 */
proto.pkg.property.propertypb.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.property.propertypb.DeleteResponse;
  return proto.pkg.property.propertypb.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.property.propertypb.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.property.propertypb.DeleteResponse}
 */
proto.pkg.property.propertypb.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.property.propertypb.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.property.propertypb.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.property.propertypb.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pkg.property.propertypb.StoreRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.property.propertypb.StoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.property.propertypb.StoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.property.propertypb.StoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.StoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    proto.pkg.property.propertypb.Property.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.property.propertypb.StoreRequest}
 */
proto.pkg.property.propertypb.StoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.property.propertypb.StoreRequest;
  return proto.pkg.property.propertypb.StoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.property.propertypb.StoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.property.propertypb.StoreRequest}
 */
proto.pkg.property.propertypb.StoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pkg.property.propertypb.Property;
      reader.readMessage(value,proto.pkg.property.propertypb.Property.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.property.propertypb.StoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.property.propertypb.StoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.property.propertypb.StoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.StoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pkg.property.propertypb.Property.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Property properties = 1;
 * @return {!Array<!proto.pkg.property.propertypb.Property>}
 */
proto.pkg.property.propertypb.StoreRequest.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.pkg.property.propertypb.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pkg.property.propertypb.Property, 1));
};


/**
 * @param {!Array<!proto.pkg.property.propertypb.Property>} value
 * @return {!proto.pkg.property.propertypb.StoreRequest} returns this
*/
proto.pkg.property.propertypb.StoreRequest.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pkg.property.propertypb.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pkg.property.propertypb.Property}
 */
proto.pkg.property.propertypb.StoreRequest.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pkg.property.propertypb.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pkg.property.propertypb.StoreRequest} returns this
 */
proto.pkg.property.propertypb.StoreRequest.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.property.propertypb.StoreResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.property.propertypb.StoreResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.property.propertypb.StoreResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.StoreResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.property.propertypb.StoreResponse}
 */
proto.pkg.property.propertypb.StoreResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.property.propertypb.StoreResponse;
  return proto.pkg.property.propertypb.StoreResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.property.propertypb.StoreResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.property.propertypb.StoreResponse}
 */
proto.pkg.property.propertypb.StoreResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.property.propertypb.StoreResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.property.propertypb.StoreResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.property.propertypb.StoreResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.StoreResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.property.propertypb.UpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.property.propertypb.UpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.property.propertypb.UpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.UpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    property: (f = msg.getProperty()) && proto.pkg.property.propertypb.Property.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.property.propertypb.UpdateRequest}
 */
proto.pkg.property.propertypb.UpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.property.propertypb.UpdateRequest;
  return proto.pkg.property.propertypb.UpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.property.propertypb.UpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.property.propertypb.UpdateRequest}
 */
proto.pkg.property.propertypb.UpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pkg.property.propertypb.Property;
      reader.readMessage(value,proto.pkg.property.propertypb.Property.deserializeBinaryFromReader);
      msg.setProperty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.property.propertypb.UpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.property.propertypb.UpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.property.propertypb.UpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.UpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProperty();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pkg.property.propertypb.Property.serializeBinaryToWriter
    );
  }
};


/**
 * optional Property property = 1;
 * @return {?proto.pkg.property.propertypb.Property}
 */
proto.pkg.property.propertypb.UpdateRequest.prototype.getProperty = function() {
  return /** @type{?proto.pkg.property.propertypb.Property} */ (
    jspb.Message.getWrapperField(this, proto.pkg.property.propertypb.Property, 1));
};


/**
 * @param {?proto.pkg.property.propertypb.Property|undefined} value
 * @return {!proto.pkg.property.propertypb.UpdateRequest} returns this
*/
proto.pkg.property.propertypb.UpdateRequest.prototype.setProperty = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.property.propertypb.UpdateRequest} returns this
 */
proto.pkg.property.propertypb.UpdateRequest.prototype.clearProperty = function() {
  return this.setProperty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.property.propertypb.UpdateRequest.prototype.hasProperty = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.property.propertypb.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.property.propertypb.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.property.propertypb.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.property.propertypb.UpdateResponse}
 */
proto.pkg.property.propertypb.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.property.propertypb.UpdateResponse;
  return proto.pkg.property.propertypb.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.property.propertypb.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.property.propertypb.UpdateResponse}
 */
proto.pkg.property.propertypb.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.property.propertypb.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.property.propertypb.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.property.propertypb.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.property.propertypb.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.pkg.property.propertypb.Status = {
  STATUS_NOT_SET: 0,
  VIEW: 1,
  EDIT: 2,
  HIDE: 3
};

goog.object.extend(exports, proto.pkg.property.propertypb);
