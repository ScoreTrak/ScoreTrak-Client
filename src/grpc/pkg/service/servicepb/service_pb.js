// source: pkg/service/servicepb/service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var pkg_proto_utilpb_uuid_pb = require('../../../pkg/proto/utilpb/uuid_pb.js');
goog.object.extend(proto, pkg_proto_utilpb_uuid_pb);
var pkg_property_propertypb_property_pb = require('../../../pkg/property/propertypb/property_pb.js');
goog.object.extend(proto, pkg_property_propertypb_property_pb);
var pkg_check_checkpb_check_pb = require('../../../pkg/check/checkpb/check_pb.js');
goog.object.extend(proto, pkg_check_checkpb_check_pb);
goog.exportSymbol('proto.pkg.service.servicepb.DeleteRequest', null, global);
goog.exportSymbol('proto.pkg.service.servicepb.DeleteResponse', null, global);
goog.exportSymbol('proto.pkg.service.servicepb.GetAllRequest', null, global);
goog.exportSymbol('proto.pkg.service.servicepb.GetAllResponse', null, global);
goog.exportSymbol('proto.pkg.service.servicepb.GetByIDRequest', null, global);
goog.exportSymbol('proto.pkg.service.servicepb.GetByIDResponse', null, global);
goog.exportSymbol('proto.pkg.service.servicepb.Service', null, global);
goog.exportSymbol('proto.pkg.service.servicepb.StoreRequest', null, global);
goog.exportSymbol('proto.pkg.service.servicepb.StoreResponse', null, global);
goog.exportSymbol('proto.pkg.service.servicepb.TestServiceRequest', null, global);
goog.exportSymbol('proto.pkg.service.servicepb.TestServiceResponse', null, global);
goog.exportSymbol('proto.pkg.service.servicepb.UpdateRequest', null, global);
goog.exportSymbol('proto.pkg.service.servicepb.UpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.service.servicepb.Service = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pkg.service.servicepb.Service.repeatedFields_, null);
};
goog.inherits(proto.pkg.service.servicepb.Service, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.service.servicepb.Service.displayName = 'proto.pkg.service.servicepb.Service';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.service.servicepb.GetAllRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.service.servicepb.GetAllRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.service.servicepb.GetAllRequest.displayName = 'proto.pkg.service.servicepb.GetAllRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.service.servicepb.GetAllResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pkg.service.servicepb.GetAllResponse.repeatedFields_, null);
};
goog.inherits(proto.pkg.service.servicepb.GetAllResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.service.servicepb.GetAllResponse.displayName = 'proto.pkg.service.servicepb.GetAllResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.service.servicepb.GetByIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.service.servicepb.GetByIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.service.servicepb.GetByIDRequest.displayName = 'proto.pkg.service.servicepb.GetByIDRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.service.servicepb.GetByIDResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.service.servicepb.GetByIDResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.service.servicepb.GetByIDResponse.displayName = 'proto.pkg.service.servicepb.GetByIDResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.service.servicepb.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.service.servicepb.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.service.servicepb.DeleteRequest.displayName = 'proto.pkg.service.servicepb.DeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.service.servicepb.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.service.servicepb.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.service.servicepb.DeleteResponse.displayName = 'proto.pkg.service.servicepb.DeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.service.servicepb.StoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pkg.service.servicepb.StoreRequest.repeatedFields_, null);
};
goog.inherits(proto.pkg.service.servicepb.StoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.service.servicepb.StoreRequest.displayName = 'proto.pkg.service.servicepb.StoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.service.servicepb.StoreResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pkg.service.servicepb.StoreResponse.repeatedFields_, null);
};
goog.inherits(proto.pkg.service.servicepb.StoreResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.service.servicepb.StoreResponse.displayName = 'proto.pkg.service.servicepb.StoreResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.service.servicepb.UpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.service.servicepb.UpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.service.servicepb.UpdateRequest.displayName = 'proto.pkg.service.servicepb.UpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.service.servicepb.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.service.servicepb.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.service.servicepb.UpdateResponse.displayName = 'proto.pkg.service.servicepb.UpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.service.servicepb.TestServiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.service.servicepb.TestServiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.service.servicepb.TestServiceRequest.displayName = 'proto.pkg.service.servicepb.TestServiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pkg.service.servicepb.TestServiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pkg.service.servicepb.TestServiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pkg.service.servicepb.TestServiceResponse.displayName = 'proto.pkg.service.servicepb.TestServiceResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pkg.service.servicepb.Service.repeatedFields_ = [12,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.service.servicepb.Service.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.service.servicepb.Service.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.service.servicepb.Service} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.Service.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && pkg_proto_utilpb_uuid_pb.UUID.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    weight: (f = msg.getWeight()) && google_protobuf_wrappers_pb.UInt64Value.toObject(includeInstance, f),
    pointsBoost: (f = msg.getPointsBoost()) && google_protobuf_wrappers_pb.UInt64Value.toObject(includeInstance, f),
    roundUnits: jspb.Message.getFieldWithDefault(msg, 6, 0),
    roundDelay: (f = msg.getRoundDelay()) && google_protobuf_wrappers_pb.UInt64Value.toObject(includeInstance, f),
    serviceGroupId: (f = msg.getServiceGroupId()) && pkg_proto_utilpb_uuid_pb.UUID.toObject(includeInstance, f),
    hostId: (f = msg.getHostId()) && pkg_proto_utilpb_uuid_pb.UUID.toObject(includeInstance, f),
    hide: (f = msg.getHide()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    pause: (f = msg.getPause()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f),
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    pkg_property_propertypb_property_pb.Property.toObject, includeInstance),
    checksList: jspb.Message.toObjectList(msg.getChecksList(),
    pkg_check_checkpb_check_pb.Check.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.service.servicepb.Service}
 */
proto.pkg.service.servicepb.Service.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.service.servicepb.Service;
  return proto.pkg.service.servicepb.Service.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.service.servicepb.Service} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.service.servicepb.Service}
 */
proto.pkg.service.servicepb.Service.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_proto_utilpb_uuid_pb.UUID;
      reader.readMessage(value,pkg_proto_utilpb_uuid_pb.UUID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.UInt64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt64Value.deserializeBinaryFromReader);
      msg.setWeight(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.UInt64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt64Value.deserializeBinaryFromReader);
      msg.setPointsBoost(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRoundUnits(value);
      break;
    case 7:
      var value = new google_protobuf_wrappers_pb.UInt64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.UInt64Value.deserializeBinaryFromReader);
      msg.setRoundDelay(value);
      break;
    case 8:
      var value = new pkg_proto_utilpb_uuid_pb.UUID;
      reader.readMessage(value,pkg_proto_utilpb_uuid_pb.UUID.deserializeBinaryFromReader);
      msg.setServiceGroupId(value);
      break;
    case 9:
      var value = new pkg_proto_utilpb_uuid_pb.UUID;
      reader.readMessage(value,pkg_proto_utilpb_uuid_pb.UUID.deserializeBinaryFromReader);
      msg.setHostId(value);
      break;
    case 10:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setHide(value);
      break;
    case 11:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setPause(value);
      break;
    case 12:
      var value = new pkg_property_propertypb_property_pb.Property;
      reader.readMessage(value,pkg_property_propertypb_property_pb.Property.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    case 13:
      var value = new pkg_check_checkpb_check_pb.Check;
      reader.readMessage(value,pkg_check_checkpb_check_pb.Check.deserializeBinaryFromReader);
      msg.addChecks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.service.servicepb.Service.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.service.servicepb.Service.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.service.servicepb.Service} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.Service.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_proto_utilpb_uuid_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWeight();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.UInt64Value.serializeBinaryToWriter
    );
  }
  f = message.getPointsBoost();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.UInt64Value.serializeBinaryToWriter
    );
  }
  f = message.getRoundUnits();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getRoundDelay();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_wrappers_pb.UInt64Value.serializeBinaryToWriter
    );
  }
  f = message.getServiceGroupId();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      pkg_proto_utilpb_uuid_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getHostId();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      pkg_proto_utilpb_uuid_pb.UUID.serializeBinaryToWriter
    );
  }
  f = message.getHide();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getPause();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      pkg_property_propertypb_property_pb.Property.serializeBinaryToWriter
    );
  }
  f = message.getChecksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      pkg_check_checkpb_check_pb.Check.serializeBinaryToWriter
    );
  }
};


/**
 * optional pkg.proto.utilpb.UUID id = 1;
 * @return {?proto.pkg.proto.utilpb.UUID}
 */
proto.pkg.service.servicepb.Service.prototype.getId = function() {
  return /** @type{?proto.pkg.proto.utilpb.UUID} */ (
    jspb.Message.getWrapperField(this, pkg_proto_utilpb_uuid_pb.UUID, 1));
};


/**
 * @param {?proto.pkg.proto.utilpb.UUID|undefined} value
 * @return {!proto.pkg.service.servicepb.Service} returns this
*/
proto.pkg.service.servicepb.Service.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.service.servicepb.Service} returns this
 */
proto.pkg.service.servicepb.Service.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.service.servicepb.Service.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.pkg.service.servicepb.Service.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pkg.service.servicepb.Service} returns this
 */
proto.pkg.service.servicepb.Service.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string display_name = 3;
 * @return {string}
 */
proto.pkg.service.servicepb.Service.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pkg.service.servicepb.Service} returns this
 */
proto.pkg.service.servicepb.Service.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.UInt64Value weight = 4;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.pkg.service.servicepb.Service.prototype.getWeight = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt64Value, 4));
};


/**
 * @param {?proto.google.protobuf.UInt64Value|undefined} value
 * @return {!proto.pkg.service.servicepb.Service} returns this
*/
proto.pkg.service.servicepb.Service.prototype.setWeight = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.service.servicepb.Service} returns this
 */
proto.pkg.service.servicepb.Service.prototype.clearWeight = function() {
  return this.setWeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.service.servicepb.Service.prototype.hasWeight = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.UInt64Value points_boost = 5;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.pkg.service.servicepb.Service.prototype.getPointsBoost = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt64Value, 5));
};


/**
 * @param {?proto.google.protobuf.UInt64Value|undefined} value
 * @return {!proto.pkg.service.servicepb.Service} returns this
*/
proto.pkg.service.servicepb.Service.prototype.setPointsBoost = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.service.servicepb.Service} returns this
 */
proto.pkg.service.servicepb.Service.prototype.clearPointsBoost = function() {
  return this.setPointsBoost(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.service.servicepb.Service.prototype.hasPointsBoost = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 round_units = 6;
 * @return {number}
 */
proto.pkg.service.servicepb.Service.prototype.getRoundUnits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.pkg.service.servicepb.Service} returns this
 */
proto.pkg.service.servicepb.Service.prototype.setRoundUnits = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional google.protobuf.UInt64Value round_delay = 7;
 * @return {?proto.google.protobuf.UInt64Value}
 */
proto.pkg.service.servicepb.Service.prototype.getRoundDelay = function() {
  return /** @type{?proto.google.protobuf.UInt64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.UInt64Value, 7));
};


/**
 * @param {?proto.google.protobuf.UInt64Value|undefined} value
 * @return {!proto.pkg.service.servicepb.Service} returns this
*/
proto.pkg.service.servicepb.Service.prototype.setRoundDelay = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.service.servicepb.Service} returns this
 */
proto.pkg.service.servicepb.Service.prototype.clearRoundDelay = function() {
  return this.setRoundDelay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.service.servicepb.Service.prototype.hasRoundDelay = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional pkg.proto.utilpb.UUID service_group_id = 8;
 * @return {?proto.pkg.proto.utilpb.UUID}
 */
proto.pkg.service.servicepb.Service.prototype.getServiceGroupId = function() {
  return /** @type{?proto.pkg.proto.utilpb.UUID} */ (
    jspb.Message.getWrapperField(this, pkg_proto_utilpb_uuid_pb.UUID, 8));
};


/**
 * @param {?proto.pkg.proto.utilpb.UUID|undefined} value
 * @return {!proto.pkg.service.servicepb.Service} returns this
*/
proto.pkg.service.servicepb.Service.prototype.setServiceGroupId = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.service.servicepb.Service} returns this
 */
proto.pkg.service.servicepb.Service.prototype.clearServiceGroupId = function() {
  return this.setServiceGroupId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.service.servicepb.Service.prototype.hasServiceGroupId = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional pkg.proto.utilpb.UUID host_id = 9;
 * @return {?proto.pkg.proto.utilpb.UUID}
 */
proto.pkg.service.servicepb.Service.prototype.getHostId = function() {
  return /** @type{?proto.pkg.proto.utilpb.UUID} */ (
    jspb.Message.getWrapperField(this, pkg_proto_utilpb_uuid_pb.UUID, 9));
};


/**
 * @param {?proto.pkg.proto.utilpb.UUID|undefined} value
 * @return {!proto.pkg.service.servicepb.Service} returns this
*/
proto.pkg.service.servicepb.Service.prototype.setHostId = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.service.servicepb.Service} returns this
 */
proto.pkg.service.servicepb.Service.prototype.clearHostId = function() {
  return this.setHostId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.service.servicepb.Service.prototype.hasHostId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.BoolValue hide = 10;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.pkg.service.servicepb.Service.prototype.getHide = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 10));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.pkg.service.servicepb.Service} returns this
*/
proto.pkg.service.servicepb.Service.prototype.setHide = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.service.servicepb.Service} returns this
 */
proto.pkg.service.servicepb.Service.prototype.clearHide = function() {
  return this.setHide(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.service.servicepb.Service.prototype.hasHide = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.BoolValue pause = 11;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.pkg.service.servicepb.Service.prototype.getPause = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 11));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.pkg.service.servicepb.Service} returns this
*/
proto.pkg.service.servicepb.Service.prototype.setPause = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.service.servicepb.Service} returns this
 */
proto.pkg.service.servicepb.Service.prototype.clearPause = function() {
  return this.setPause(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.service.servicepb.Service.prototype.hasPause = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated pkg.property.propertypb.Property properties = 12;
 * @return {!Array<!proto.pkg.property.propertypb.Property>}
 */
proto.pkg.service.servicepb.Service.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.pkg.property.propertypb.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, pkg_property_propertypb_property_pb.Property, 12));
};


/**
 * @param {!Array<!proto.pkg.property.propertypb.Property>} value
 * @return {!proto.pkg.service.servicepb.Service} returns this
*/
proto.pkg.service.servicepb.Service.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.pkg.property.propertypb.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pkg.property.propertypb.Property}
 */
proto.pkg.service.servicepb.Service.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.pkg.property.propertypb.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pkg.service.servicepb.Service} returns this
 */
proto.pkg.service.servicepb.Service.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};


/**
 * repeated pkg.check.checkpb.Check checks = 13;
 * @return {!Array<!proto.pkg.check.checkpb.Check>}
 */
proto.pkg.service.servicepb.Service.prototype.getChecksList = function() {
  return /** @type{!Array<!proto.pkg.check.checkpb.Check>} */ (
    jspb.Message.getRepeatedWrapperField(this, pkg_check_checkpb_check_pb.Check, 13));
};


/**
 * @param {!Array<!proto.pkg.check.checkpb.Check>} value
 * @return {!proto.pkg.service.servicepb.Service} returns this
*/
proto.pkg.service.servicepb.Service.prototype.setChecksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.pkg.check.checkpb.Check=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pkg.check.checkpb.Check}
 */
proto.pkg.service.servicepb.Service.prototype.addChecks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.pkg.check.checkpb.Check, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pkg.service.servicepb.Service} returns this
 */
proto.pkg.service.servicepb.Service.prototype.clearChecksList = function() {
  return this.setChecksList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.service.servicepb.GetAllRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.service.servicepb.GetAllRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.service.servicepb.GetAllRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.GetAllRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.service.servicepb.GetAllRequest}
 */
proto.pkg.service.servicepb.GetAllRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.service.servicepb.GetAllRequest;
  return proto.pkg.service.servicepb.GetAllRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.service.servicepb.GetAllRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.service.servicepb.GetAllRequest}
 */
proto.pkg.service.servicepb.GetAllRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.service.servicepb.GetAllRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.service.servicepb.GetAllRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.service.servicepb.GetAllRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.GetAllRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pkg.service.servicepb.GetAllResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.service.servicepb.GetAllResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.service.servicepb.GetAllResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.service.servicepb.GetAllResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.GetAllResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicesList: jspb.Message.toObjectList(msg.getServicesList(),
    proto.pkg.service.servicepb.Service.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.service.servicepb.GetAllResponse}
 */
proto.pkg.service.servicepb.GetAllResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.service.servicepb.GetAllResponse;
  return proto.pkg.service.servicepb.GetAllResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.service.servicepb.GetAllResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.service.servicepb.GetAllResponse}
 */
proto.pkg.service.servicepb.GetAllResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pkg.service.servicepb.Service;
      reader.readMessage(value,proto.pkg.service.servicepb.Service.deserializeBinaryFromReader);
      msg.addServices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.service.servicepb.GetAllResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.service.servicepb.GetAllResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.service.servicepb.GetAllResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.GetAllResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pkg.service.servicepb.Service.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Service services = 1;
 * @return {!Array<!proto.pkg.service.servicepb.Service>}
 */
proto.pkg.service.servicepb.GetAllResponse.prototype.getServicesList = function() {
  return /** @type{!Array<!proto.pkg.service.servicepb.Service>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pkg.service.servicepb.Service, 1));
};


/**
 * @param {!Array<!proto.pkg.service.servicepb.Service>} value
 * @return {!proto.pkg.service.servicepb.GetAllResponse} returns this
*/
proto.pkg.service.servicepb.GetAllResponse.prototype.setServicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pkg.service.servicepb.Service=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pkg.service.servicepb.Service}
 */
proto.pkg.service.servicepb.GetAllResponse.prototype.addServices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pkg.service.servicepb.Service, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pkg.service.servicepb.GetAllResponse} returns this
 */
proto.pkg.service.servicepb.GetAllResponse.prototype.clearServicesList = function() {
  return this.setServicesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.service.servicepb.GetByIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.service.servicepb.GetByIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.service.servicepb.GetByIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.GetByIDRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && pkg_proto_utilpb_uuid_pb.UUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.service.servicepb.GetByIDRequest}
 */
proto.pkg.service.servicepb.GetByIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.service.servicepb.GetByIDRequest;
  return proto.pkg.service.servicepb.GetByIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.service.servicepb.GetByIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.service.servicepb.GetByIDRequest}
 */
proto.pkg.service.servicepb.GetByIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_proto_utilpb_uuid_pb.UUID;
      reader.readMessage(value,pkg_proto_utilpb_uuid_pb.UUID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.service.servicepb.GetByIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.service.servicepb.GetByIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.service.servicepb.GetByIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.GetByIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_proto_utilpb_uuid_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional pkg.proto.utilpb.UUID id = 1;
 * @return {?proto.pkg.proto.utilpb.UUID}
 */
proto.pkg.service.servicepb.GetByIDRequest.prototype.getId = function() {
  return /** @type{?proto.pkg.proto.utilpb.UUID} */ (
    jspb.Message.getWrapperField(this, pkg_proto_utilpb_uuid_pb.UUID, 1));
};


/**
 * @param {?proto.pkg.proto.utilpb.UUID|undefined} value
 * @return {!proto.pkg.service.servicepb.GetByIDRequest} returns this
*/
proto.pkg.service.servicepb.GetByIDRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.service.servicepb.GetByIDRequest} returns this
 */
proto.pkg.service.servicepb.GetByIDRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.service.servicepb.GetByIDRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.service.servicepb.GetByIDResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.service.servicepb.GetByIDResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.service.servicepb.GetByIDResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.GetByIDResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: (f = msg.getService()) && proto.pkg.service.servicepb.Service.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.service.servicepb.GetByIDResponse}
 */
proto.pkg.service.servicepb.GetByIDResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.service.servicepb.GetByIDResponse;
  return proto.pkg.service.servicepb.GetByIDResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.service.servicepb.GetByIDResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.service.servicepb.GetByIDResponse}
 */
proto.pkg.service.servicepb.GetByIDResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pkg.service.servicepb.Service;
      reader.readMessage(value,proto.pkg.service.servicepb.Service.deserializeBinaryFromReader);
      msg.setService(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.service.servicepb.GetByIDResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.service.servicepb.GetByIDResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.service.servicepb.GetByIDResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.GetByIDResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pkg.service.servicepb.Service.serializeBinaryToWriter
    );
  }
};


/**
 * optional Service service = 1;
 * @return {?proto.pkg.service.servicepb.Service}
 */
proto.pkg.service.servicepb.GetByIDResponse.prototype.getService = function() {
  return /** @type{?proto.pkg.service.servicepb.Service} */ (
    jspb.Message.getWrapperField(this, proto.pkg.service.servicepb.Service, 1));
};


/**
 * @param {?proto.pkg.service.servicepb.Service|undefined} value
 * @return {!proto.pkg.service.servicepb.GetByIDResponse} returns this
*/
proto.pkg.service.servicepb.GetByIDResponse.prototype.setService = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.service.servicepb.GetByIDResponse} returns this
 */
proto.pkg.service.servicepb.GetByIDResponse.prototype.clearService = function() {
  return this.setService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.service.servicepb.GetByIDResponse.prototype.hasService = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.service.servicepb.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.service.servicepb.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.service.servicepb.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && pkg_proto_utilpb_uuid_pb.UUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.service.servicepb.DeleteRequest}
 */
proto.pkg.service.servicepb.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.service.servicepb.DeleteRequest;
  return proto.pkg.service.servicepb.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.service.servicepb.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.service.servicepb.DeleteRequest}
 */
proto.pkg.service.servicepb.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_proto_utilpb_uuid_pb.UUID;
      reader.readMessage(value,pkg_proto_utilpb_uuid_pb.UUID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.service.servicepb.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.service.servicepb.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.service.servicepb.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_proto_utilpb_uuid_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional pkg.proto.utilpb.UUID id = 1;
 * @return {?proto.pkg.proto.utilpb.UUID}
 */
proto.pkg.service.servicepb.DeleteRequest.prototype.getId = function() {
  return /** @type{?proto.pkg.proto.utilpb.UUID} */ (
    jspb.Message.getWrapperField(this, pkg_proto_utilpb_uuid_pb.UUID, 1));
};


/**
 * @param {?proto.pkg.proto.utilpb.UUID|undefined} value
 * @return {!proto.pkg.service.servicepb.DeleteRequest} returns this
*/
proto.pkg.service.servicepb.DeleteRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.service.servicepb.DeleteRequest} returns this
 */
proto.pkg.service.servicepb.DeleteRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.service.servicepb.DeleteRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.service.servicepb.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.service.servicepb.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.service.servicepb.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.service.servicepb.DeleteResponse}
 */
proto.pkg.service.servicepb.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.service.servicepb.DeleteResponse;
  return proto.pkg.service.servicepb.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.service.servicepb.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.service.servicepb.DeleteResponse}
 */
proto.pkg.service.servicepb.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.service.servicepb.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.service.servicepb.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.service.servicepb.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pkg.service.servicepb.StoreRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.service.servicepb.StoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.service.servicepb.StoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.service.servicepb.StoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.StoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicesList: jspb.Message.toObjectList(msg.getServicesList(),
    proto.pkg.service.servicepb.Service.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.service.servicepb.StoreRequest}
 */
proto.pkg.service.servicepb.StoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.service.servicepb.StoreRequest;
  return proto.pkg.service.servicepb.StoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.service.servicepb.StoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.service.servicepb.StoreRequest}
 */
proto.pkg.service.servicepb.StoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pkg.service.servicepb.Service;
      reader.readMessage(value,proto.pkg.service.servicepb.Service.deserializeBinaryFromReader);
      msg.addServices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.service.servicepb.StoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.service.servicepb.StoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.service.servicepb.StoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.StoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pkg.service.servicepb.Service.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Service services = 1;
 * @return {!Array<!proto.pkg.service.servicepb.Service>}
 */
proto.pkg.service.servicepb.StoreRequest.prototype.getServicesList = function() {
  return /** @type{!Array<!proto.pkg.service.servicepb.Service>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pkg.service.servicepb.Service, 1));
};


/**
 * @param {!Array<!proto.pkg.service.servicepb.Service>} value
 * @return {!proto.pkg.service.servicepb.StoreRequest} returns this
*/
proto.pkg.service.servicepb.StoreRequest.prototype.setServicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pkg.service.servicepb.Service=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pkg.service.servicepb.Service}
 */
proto.pkg.service.servicepb.StoreRequest.prototype.addServices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pkg.service.servicepb.Service, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pkg.service.servicepb.StoreRequest} returns this
 */
proto.pkg.service.servicepb.StoreRequest.prototype.clearServicesList = function() {
  return this.setServicesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pkg.service.servicepb.StoreResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.service.servicepb.StoreResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.service.servicepb.StoreResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.service.servicepb.StoreResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.StoreResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    idsList: jspb.Message.toObjectList(msg.getIdsList(),
    pkg_proto_utilpb_uuid_pb.UUID.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.service.servicepb.StoreResponse}
 */
proto.pkg.service.servicepb.StoreResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.service.servicepb.StoreResponse;
  return proto.pkg.service.servicepb.StoreResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.service.servicepb.StoreResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.service.servicepb.StoreResponse}
 */
proto.pkg.service.servicepb.StoreResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_proto_utilpb_uuid_pb.UUID;
      reader.readMessage(value,pkg_proto_utilpb_uuid_pb.UUID.deserializeBinaryFromReader);
      msg.addIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.service.servicepb.StoreResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.service.servicepb.StoreResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.service.servicepb.StoreResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.StoreResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      pkg_proto_utilpb_uuid_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * repeated pkg.proto.utilpb.UUID ids = 1;
 * @return {!Array<!proto.pkg.proto.utilpb.UUID>}
 */
proto.pkg.service.servicepb.StoreResponse.prototype.getIdsList = function() {
  return /** @type{!Array<!proto.pkg.proto.utilpb.UUID>} */ (
    jspb.Message.getRepeatedWrapperField(this, pkg_proto_utilpb_uuid_pb.UUID, 1));
};


/**
 * @param {!Array<!proto.pkg.proto.utilpb.UUID>} value
 * @return {!proto.pkg.service.servicepb.StoreResponse} returns this
*/
proto.pkg.service.servicepb.StoreResponse.prototype.setIdsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pkg.proto.utilpb.UUID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pkg.proto.utilpb.UUID}
 */
proto.pkg.service.servicepb.StoreResponse.prototype.addIds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pkg.proto.utilpb.UUID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pkg.service.servicepb.StoreResponse} returns this
 */
proto.pkg.service.servicepb.StoreResponse.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.service.servicepb.UpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.service.servicepb.UpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.service.servicepb.UpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.UpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: (f = msg.getService()) && proto.pkg.service.servicepb.Service.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.service.servicepb.UpdateRequest}
 */
proto.pkg.service.servicepb.UpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.service.servicepb.UpdateRequest;
  return proto.pkg.service.servicepb.UpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.service.servicepb.UpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.service.servicepb.UpdateRequest}
 */
proto.pkg.service.servicepb.UpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pkg.service.servicepb.Service;
      reader.readMessage(value,proto.pkg.service.servicepb.Service.deserializeBinaryFromReader);
      msg.setService(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.service.servicepb.UpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.service.servicepb.UpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.service.servicepb.UpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.UpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pkg.service.servicepb.Service.serializeBinaryToWriter
    );
  }
};


/**
 * optional Service service = 1;
 * @return {?proto.pkg.service.servicepb.Service}
 */
proto.pkg.service.servicepb.UpdateRequest.prototype.getService = function() {
  return /** @type{?proto.pkg.service.servicepb.Service} */ (
    jspb.Message.getWrapperField(this, proto.pkg.service.servicepb.Service, 1));
};


/**
 * @param {?proto.pkg.service.servicepb.Service|undefined} value
 * @return {!proto.pkg.service.servicepb.UpdateRequest} returns this
*/
proto.pkg.service.servicepb.UpdateRequest.prototype.setService = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.service.servicepb.UpdateRequest} returns this
 */
proto.pkg.service.servicepb.UpdateRequest.prototype.clearService = function() {
  return this.setService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.service.servicepb.UpdateRequest.prototype.hasService = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.service.servicepb.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.service.servicepb.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.service.servicepb.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.service.servicepb.UpdateResponse}
 */
proto.pkg.service.servicepb.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.service.servicepb.UpdateResponse;
  return proto.pkg.service.servicepb.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.service.servicepb.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.service.servicepb.UpdateResponse}
 */
proto.pkg.service.servicepb.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.service.servicepb.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.service.servicepb.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.service.servicepb.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.service.servicepb.TestServiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.service.servicepb.TestServiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.service.servicepb.TestServiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.TestServiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && pkg_proto_utilpb_uuid_pb.UUID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.service.servicepb.TestServiceRequest}
 */
proto.pkg.service.servicepb.TestServiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.service.servicepb.TestServiceRequest;
  return proto.pkg.service.servicepb.TestServiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.service.servicepb.TestServiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.service.servicepb.TestServiceRequest}
 */
proto.pkg.service.servicepb.TestServiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_proto_utilpb_uuid_pb.UUID;
      reader.readMessage(value,pkg_proto_utilpb_uuid_pb.UUID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.service.servicepb.TestServiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.service.servicepb.TestServiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.service.servicepb.TestServiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.TestServiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_proto_utilpb_uuid_pb.UUID.serializeBinaryToWriter
    );
  }
};


/**
 * optional pkg.proto.utilpb.UUID id = 1;
 * @return {?proto.pkg.proto.utilpb.UUID}
 */
proto.pkg.service.servicepb.TestServiceRequest.prototype.getId = function() {
  return /** @type{?proto.pkg.proto.utilpb.UUID} */ (
    jspb.Message.getWrapperField(this, pkg_proto_utilpb_uuid_pb.UUID, 1));
};


/**
 * @param {?proto.pkg.proto.utilpb.UUID|undefined} value
 * @return {!proto.pkg.service.servicepb.TestServiceRequest} returns this
*/
proto.pkg.service.servicepb.TestServiceRequest.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.service.servicepb.TestServiceRequest} returns this
 */
proto.pkg.service.servicepb.TestServiceRequest.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.service.servicepb.TestServiceRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pkg.service.servicepb.TestServiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pkg.service.servicepb.TestServiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pkg.service.servicepb.TestServiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.TestServiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    check: (f = msg.getCheck()) && pkg_check_checkpb_check_pb.Check.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pkg.service.servicepb.TestServiceResponse}
 */
proto.pkg.service.servicepb.TestServiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pkg.service.servicepb.TestServiceResponse;
  return proto.pkg.service.servicepb.TestServiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pkg.service.servicepb.TestServiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pkg.service.servicepb.TestServiceResponse}
 */
proto.pkg.service.servicepb.TestServiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_check_checkpb_check_pb.Check;
      reader.readMessage(value,pkg_check_checkpb_check_pb.Check.deserializeBinaryFromReader);
      msg.setCheck(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pkg.service.servicepb.TestServiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pkg.service.servicepb.TestServiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pkg.service.servicepb.TestServiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pkg.service.servicepb.TestServiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCheck();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_check_checkpb_check_pb.Check.serializeBinaryToWriter
    );
  }
};


/**
 * optional pkg.check.checkpb.Check check = 1;
 * @return {?proto.pkg.check.checkpb.Check}
 */
proto.pkg.service.servicepb.TestServiceResponse.prototype.getCheck = function() {
  return /** @type{?proto.pkg.check.checkpb.Check} */ (
    jspb.Message.getWrapperField(this, pkg_check_checkpb_check_pb.Check, 1));
};


/**
 * @param {?proto.pkg.check.checkpb.Check|undefined} value
 * @return {!proto.pkg.service.servicepb.TestServiceResponse} returns this
*/
proto.pkg.service.servicepb.TestServiceResponse.prototype.setCheck = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pkg.service.servicepb.TestServiceResponse} returns this
 */
proto.pkg.service.servicepb.TestServiceResponse.prototype.clearCheck = function() {
  return this.setCheck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pkg.service.servicepb.TestServiceResponse.prototype.hasCheck = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.pkg.service.servicepb);
